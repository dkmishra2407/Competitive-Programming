{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "8Sh9CjhXvhwKemdpC0qPW",
      "type": "text",
      "x": 608,
      "y": 124.19999694824219,
      "width": 328.82391357421875,
      "height": 45,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aN",
      "roundness": null,
      "seed": 1683800789,
      "version": 19,
      "versionNonce": 820385333,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713321532571,
      "link": null,
      "locked": false,
      "text": "PRIORITY QUEUE",
      "fontSize": 36,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "PRIORITY QUEUE",
      "lineHeight": 1.25
    },
    {
      "id": "wsUgKyuqIwVV3-8abR2yb",
      "type": "text",
      "x": 337.6000061035156,
      "y": 249.80003356933594,
      "width": 445.3125,
      "height": 24,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aO",
      "roundness": null,
      "seed": 549702901,
      "version": 23,
      "versionNonce": 532090203,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713321606062,
      "link": null,
      "locked": false,
      "text": "priority_queue<int> pq;   --> MAX HEAP",
      "fontSize": 20,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "priority_queue<int> pq;   --> MAX HEAP",
      "lineHeight": 1.2
    },
    {
      "id": "DTc7MyiMXOxX1p68d71K8",
      "type": "text",
      "x": 346.3999938964844,
      "y": 303,
      "width": 550.78125,
      "height": 48,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aP",
      "roundness": null,
      "seed": 1150371637,
      "version": 21,
      "versionNonce": 750975669,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713321636957,
      "link": null,
      "locked": false,
      "text": "priority_queue<int, vector<int>,\n           greater<int<>> pq;      --> MIN HEAP",
      "fontSize": 20,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "priority_queue<int, vector<int>,\n           greater<int<>> pq;      --> MIN HEAP",
      "lineHeight": 1.2
    },
    {
      "id": "O23KGdHUGrVwpWv7rRNWV",
      "type": "text",
      "x": 349.6000061035156,
      "y": 409.4000244140625,
      "width": 855.46875,
      "height": 96,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aQ",
      "roundness": null,
      "seed": 621908341,
      "version": 3,
      "versionNonce": 1379498037,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713321681308,
      "link": null,
      "locked": false,
      "text": "top(): O(1) as the top element can be accessed directly in constant time.\nempty(): O(1) as the checking can be done in constant time.\npush(): O(logn)\npop(): O(logn)",
      "fontSize": 20,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "top(): O(1) as the top element can be accessed directly in constant time.\nempty(): O(1) as the checking can be done in constant time.\npush(): O(logn)\npop(): O(logn)",
      "lineHeight": 1.2
    },
    {
      "id": "i2iS1NNMZyqBneVhqYUal",
      "type": "text",
      "x": 330.2091845984768,
      "y": 552.559056470363,
      "width": 609.375,
      "height": 1104,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aR",
      "roundness": null,
      "seed": 1947707099,
      "version": 89,
      "versionNonce": 2022282011,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713331258371,
      "link": null,
      "locked": false,
      "text": "struct compare {\n    bool operator()(pair<int, int> p1,\n                    pair<int, int> p2)\n    {\n        // if the frequency matches\n        // return the lesser value\n        if (p1.second == p2.second)\n            return p1.first > p2.first;\n        else\n            return p1.second < p2.second;\n    }\n};\n\n// Method to find the k-most frequent number\nvoid k_most_frequent(int arr[], int n, int k)\n{\n    // Create an unordered_map\n    unordered_map<int, int> mp;\n\n    // Store the numbers\n    // and frequency of occurrence\n    for (int i = 0; i < n; i++) {\n        mp[arr[i]]++;\n    }\n\n    // Creating the vector pairs\n    vector<pair<int, int> > freq(mp.begin(),\n                                 mp.end());\n\n    // priority_queue storing the vector pairs\n    // on the basis of frequency\n    priority_queue<pair<int, int>,\n                   vector<pair<int, int> >, compare>\n        pq(freq.begin(), freq.end());\n\n    // Popping k-times to get the\n    // k-most frequent numbers\n    for (int i = 0; i < k; i++) {\n\n        // Displaying the first element of\n        // the pair corresponding to the most\n        // frequently appeared element\n        cout << pq.top().first << \" \";\n        pq.pop();\n    }\n}",
      "fontSize": 20,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "struct compare {\n    bool operator()(pair<int, int> p1,\n                    pair<int, int> p2)\n    {\n        // if the frequency matches\n        // return the lesser value\n        if (p1.second == p2.second)\n            return p1.first > p2.first;\n        else\n            return p1.second < p2.second;\n    }\n};\n\n// Method to find the k-most frequent number\nvoid k_most_frequent(int arr[], int n, int k)\n{\n    // Create an unordered_map\n    unordered_map<int, int> mp;\n\n    // Store the numbers\n    // and frequency of occurrence\n    for (int i = 0; i < n; i++) {\n        mp[arr[i]]++;\n    }\n\n    // Creating the vector pairs\n    vector<pair<int, int> > freq(mp.begin(),\n                                 mp.end());\n\n    // priority_queue storing the vector pairs\n    // on the basis of frequency\n    priority_queue<pair<int, int>,\n                   vector<pair<int, int> >, compare>\n        pq(freq.begin(), freq.end());\n\n    // Popping k-times to get the\n    // k-most frequent numbers\n    for (int i = 0; i < k; i++) {\n\n        // Displaying the first element of\n        // the pair corresponding to the most\n        // frequently appeared element\n        cout << pq.top().first << \" \";\n        pq.pop();\n    }\n}",
      "lineHeight": 1.2
    },
    {
      "id": "9No65HrYgjbLMNszz0P8S",
      "type": "text",
      "x": 350.3999938964844,
      "y": 1716,
      "width": 1148.4375,
      "height": 264,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aS",
      "roundness": null,
      "seed": 985391451,
      "version": 13,
      "versionNonce": 1308692699,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713322223142,
      "link": null,
      "locked": false,
      "text": "Approach: We will be using the concept of Unordered Map, Vector and \nPriority Queue to solve this problem efficiently. The logic is to find the number of\n times each element is appearing in the given array and storing them in an unordered_map.\n Now create a Vector of pair out of this unordered_map by assigning the value as the first\n element of the pair and the frequency of it occurring as the second. Next, \nwe need to convert this Vector pair into a priority_queue and store them in a MAX_HEAP\n wherein the arrangements would be done based on the frequency of occurrences. \nWe will also be using a compare function, that would solve the problem of similar occurrences and \nwould help with the arrangement of the queue in a prioritized manner where the lesser \nnumber will be given a priority when it shares the same frequency with another number.\n Finally, pop the element k times to get the k most frequent elements in the array.",
      "fontSize": 20,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Approach: We will be using the concept of Unordered Map, Vector and \nPriority Queue to solve this problem efficiently. The logic is to find the number of\n times each element is appearing in the given array and storing them in an unordered_map.\n Now create a Vector of pair out of this unordered_map by assigning the value as the first\n element of the pair and the frequency of it occurring as the second. Next, \nwe need to convert this Vector pair into a priority_queue and store them in a MAX_HEAP\n wherein the arrangements would be done based on the frequency of occurrences. \nWe will also be using a compare function, that would solve the problem of similar occurrences and \nwould help with the arrangement of the queue in a prioritized manner where the lesser \nnumber will be given a priority when it shares the same frequency with another number.\n Finally, pop the element k times to get the k most frequent elements in the array.",
      "lineHeight": 1.2
    },
    {
      "id": "r1yYGU5zr6jvfO1hgbC1D",
      "type": "text",
      "x": 357.8000030517578,
      "y": 2085.6000061035156,
      "width": 597.65625,
      "height": 792,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aT",
      "roundness": null,
      "seed": 1543728405,
      "version": 3,
      "versionNonce": 434170837,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713326677861,
      "link": null,
      "locked": false,
      "text": "class Solution {\npublic:\n    int minValue(string s, int k) {\n        map<char, int> m;\n        int ans = 0;\n        \n        for (char c : s) {\n            m[c]++;\n        }\n        \n        priority_queue<pair<int, char>> pq;\n        \n        for (auto& entry : m) {\n            pq.push({ entry.second, entry.first });\n        }\n        \n        while (k--) {\n            auto top = pq.top();\n            pq.pop();\n            \n            top.first--;\n            pq.push(top);\n        }\n        \n        while (!pq.empty()) {\n            auto top = pq.top();\n            pq.pop();\n            ans += pow(top.first, 2);\n        }\n        \n        return ans;\n    }\n};",
      "fontSize": 20,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class Solution {\npublic:\n    int minValue(string s, int k) {\n        map<char, int> m;\n        int ans = 0;\n        \n        for (char c : s) {\n            m[c]++;\n        }\n        \n        priority_queue<pair<int, char>> pq;\n        \n        for (auto& entry : m) {\n            pq.push({ entry.second, entry.first });\n        }\n        \n        while (k--) {\n            auto top = pq.top();\n            pq.pop();\n            \n            top.first--;\n            pq.push(top);\n        }\n        \n        while (!pq.empty()) {\n            auto top = pq.top();\n            pq.pop();\n            ans += pow(top.first, 2);\n        }\n        \n        return ans;\n    }\n};",
      "lineHeight": 1.2
    },
    {
      "id": "PGcQHX4rsFPaPqAu8TkHy",
      "type": "text",
      "x": 358.3624805541201,
      "y": 2032.378141341351,
      "width": 262.5,
      "height": 33.6,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aU",
      "roundness": null,
      "seed": 368287733,
      "version": 7,
      "versionNonce": 554174165,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713326721130,
      "link": null,
      "locked": false,
      "text": "Game with String",
      "fontSize": 28,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Game with String",
      "lineHeight": 1.2
    },
    {
      "id": "3_Ds8DLHtu-fxBH8T9Ydt",
      "type": "text",
      "x": 638.1285416797732,
      "y": 2058.826181880317,
      "width": 946.875,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aV",
      "roundness": null,
      "seed": 1345026619,
      "version": 7,
      "versionNonce": 158381403,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713326750565,
      "link": null,
      "locked": false,
      "text": "https://www.geeksforgeeks.org/problems/game-with-string4100/1?page=1&category=Heap&sortBy=submissions",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "https://www.geeksforgeeks.org/problems/game-with-string4100/1?page=1&category=Heap&sortBy=submissions",
      "lineHeight": 1.2
    },
    {
      "id": "4EG1QtBLhBYGacs7lWk7y",
      "type": "rectangle",
      "x": 312.39153812935,
      "y": 2026.3421610414762,
      "width": 1331.8438948622224,
      "height": 887.8959090313356,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aW",
      "roundness": {
        "type": 3
      },
      "seed": 853629595,
      "version": 162,
      "versionNonce": 239111317,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713326767840,
      "link": null,
      "locked": false
    },
    {
      "id": "dukqxBhutOCC_vNf9pfcd",
      "type": "text",
      "x": 667.6812903814111,
      "y": 3042.299981113253,
      "width": 328.125,
      "height": 100.80000000000001,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aX",
      "roundness": null,
      "seed": 1073490773,
      "version": 26,
      "versionNonce": 1037150645,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328310255,
      "link": null,
      "locked": false,
      "text": "MEDIAN OF THE STREAM\n\n",
      "fontSize": 28,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "MEDIAN OF THE STREAM\n\n",
      "lineHeight": 1.2
    },
    {
      "id": "DvKhyjb7cbOOHaT3EsLWO",
      "type": "ellipse",
      "x": 418.12464558109986,
      "y": 3176.272476967057,
      "width": 325.73700355042325,
      "height": 311.2888878549297,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aY",
      "roundness": {
        "type": 2
      },
      "seed": 235338939,
      "version": 84,
      "versionNonce": 1935671451,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "mmHGQ2OmtZrjz4gPscc90",
          "type": "arrow"
        }
      ],
      "updated": 1713328687650,
      "link": null,
      "locked": false
    },
    {
      "id": "H_PjEuRfXjT2x4xCCVB_w",
      "type": "ellipse",
      "x": 999.9854712123852,
      "y": 3168.391764021694,
      "width": 357.25995554057727,
      "height": 287.64677407101635,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aZ",
      "roundness": {
        "type": 2
      },
      "seed": 1161050389,
      "version": 181,
      "versionNonce": 17799221,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "QIQkdpg7pla6PJONgrfZa",
          "type": "arrow"
        }
      ],
      "updated": 1713328695667,
      "link": null,
      "locked": false
    },
    {
      "id": "54IR89XKaPJlEyCrpf4kH",
      "type": "text",
      "x": 452.2745686921765,
      "y": 3532.218971999349,
      "width": 295.3125,
      "height": 33.6,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aa",
      "roundness": null,
      "seed": 1175668411,
      "version": 20,
      "versionNonce": 1473169051,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328366868,
      "link": null,
      "locked": false,
      "text": "ALL SMALL NUMBERS ",
      "fontSize": 28,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "ALL SMALL NUMBERS ",
      "lineHeight": 1.2
    },
    {
      "id": "Z-n33Xr0WDNLfzdcz2VhC",
      "type": "text",
      "x": 1044.642978181045,
      "y": 3538.7862494886017,
      "width": 377.34375,
      "height": 33.6,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ab",
      "roundness": null,
      "seed": 928783323,
      "version": 25,
      "versionNonce": 339983067,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328385590,
      "link": null,
      "locked": false,
      "text": "ALL LARGE NUMBER THAN X",
      "fontSize": 28,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "ALL LARGE NUMBER THAN X",
      "lineHeight": 1.2
    },
    {
      "id": "fIB7ns8l7llFNFIVfgJSb",
      "type": "text",
      "x": 215.85252897472213,
      "y": 3683.2662540434653,
      "width": 442.96875,
      "height": 33.6,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ac",
      "roundness": null,
      "seed": 1910989883,
      "version": 29,
      "versionNonce": 1525835989,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328653213,
      "link": null,
      "locked": false,
      "text": "Take A Example 1 2 3 5 7 9 ",
      "fontSize": 28,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Take A Example 1 2 3 5 7 9 ",
      "lineHeight": 1.2
    },
    {
      "id": "l285QMPL1_x-3ihm3xLeU",
      "type": "text",
      "x": 540.2760469646842,
      "y": 3247.1990187362044,
      "width": 16.40625,
      "height": 168,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ad",
      "roundness": null,
      "seed": 1385428885,
      "version": 9,
      "versionNonce": 824398485,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328665442,
      "link": null,
      "locked": false,
      "text": "1\n\n2\n\n3",
      "fontSize": 28,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1\n\n2\n\n3",
      "lineHeight": 1.2
    },
    {
      "id": "TgrprmTtAXZU_AJyRbQx8",
      "type": "text",
      "x": 1139.2117339428057,
      "y": 3238.0048578086435,
      "width": 16.40625,
      "height": 168,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ae",
      "roundness": null,
      "seed": 828731733,
      "version": 9,
      "versionNonce": 797903957,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328680386,
      "link": null,
      "locked": false,
      "text": "5\n\n7\n\n9",
      "fontSize": 28,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "5\n\n7\n\n9",
      "lineHeight": 1.2
    },
    {
      "id": "mmHGQ2OmtZrjz4gPscc90",
      "type": "arrow",
      "x": 709.7118262291488,
      "y": 3436.336605416252,
      "width": 164.18193723132163,
      "height": 379.58863386838084,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "af",
      "roundness": {
        "type": 2
      },
      "seed": 51685403,
      "version": 53,
      "versionNonce": 652392443,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328687650,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          164.18193723132163,
          379.58863386838084
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "DvKhyjb7cbOOHaT3EsLWO",
        "focus": -0.47411282433208707,
        "gap": 5.858274129137527
      },
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "QIQkdpg7pla6PJONgrfZa",
      "type": "arrow",
      "x": 1047.2698490932655,
      "y": 3449.4711603947576,
      "width": 133.9724206972778,
      "height": 344.12537550989646,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ag",
      "roundness": {
        "type": 2
      },
      "seed": 955912181,
      "version": 103,
      "versionNonce": 1598274261,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328695667,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -133.9724206972778,
          344.12537550989646
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "H_PjEuRfXjT2x4xCCVB_w",
        "focus": 0.4161865076917567,
        "gap": 31.695555847810397
      },
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "lqj82eM8MrHIxnQbR7Fgh",
      "type": "text",
      "x": 615.143070467388,
      "y": 3366.7235241553926,
      "width": 16.40625,
      "height": 33.6,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ai",
      "roundness": null,
      "seed": 168530107,
      "version": 3,
      "versionNonce": 1380244987,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328717106,
      "link": null,
      "locked": false,
      "text": "A",
      "fontSize": 28,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "A",
      "lineHeight": 1.2
    },
    {
      "id": "epe37aeBM5eVMZTiDK_BQ",
      "type": "text",
      "x": 1223.2729058469827,
      "y": 3335.200547113063,
      "width": 16.40625,
      "height": 33.6,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aj",
      "roundness": null,
      "seed": 1207687995,
      "version": 3,
      "versionNonce": 193235067,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328723678,
      "link": null,
      "locked": false,
      "text": "B",
      "fontSize": 28,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "B",
      "lineHeight": 1.2
    },
    {
      "id": "buvJlQ4Lp-E55QTa01F9k",
      "type": "text",
      "x": 626.9640897810818,
      "y": 3886.851956419006,
      "width": 705.46875,
      "height": 33.6,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ak",
      "roundness": null,
      "seed": 942859707,
      "version": 47,
      "versionNonce": 556729979,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713328764731,
      "link": null,
      "locked": false,
      "text": "LARGEST FROM A & SMALLEST FROM B --> MEDIAN",
      "fontSize": 28,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "LARGEST FROM A & SMALLEST FROM B --> MEDIAN",
      "lineHeight": 1.2
    },
    {
      "id": "TQuSunkdYXsOGVRUCZ5iT",
      "type": "text",
      "x": 591.957846264301,
      "y": 3979.7231143135477,
      "width": 667.96875,
      "height": 1080,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "al",
      "roundness": null,
      "seed": 1282913371,
      "version": 69,
      "versionNonce": 728761141,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713329896070,
      "link": null,
      "locked": false,
      "text": "#include <queue>\n#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    priority_queue<int> maxpq; \n    priority_queue<int, vector<int>, greater<int>> minpq;\n    \n    void insertHeap(int &x)\n    {\n        if (maxpq.empty() || x <= maxpq.top()) {\n            maxpq.push(x);\n        } else {\n            minpq.push(x);\n        }\n        \n        balanceHeaps();\n    }\n    \n    void balanceHeaps()\n    {\n        while (maxpq.size() > minpq.size() + 1) {\n            int top = maxpq.top();\n            maxpq.pop();\n            minpq.push(top);\n        }\n        \n        while (minpq.size() > maxpq.size()) {\n            int top = minpq.top();\n            minpq.pop();\n            maxpq.push(top);\n        }\n    }\n    \n    double getMedian()\n    {\n        if (maxpq.size() == minpq.size()) {\n            return (maxpq.top() + minpq.top()) / 2.0;\n        } else {\n            return maxpq.top();\n        }\n    }\n};\n",
      "fontSize": 20,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "#include <queue>\n#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    priority_queue<int> maxpq; \n    priority_queue<int, vector<int>, greater<int>> minpq;\n    \n    void insertHeap(int &x)\n    {\n        if (maxpq.empty() || x <= maxpq.top()) {\n            maxpq.push(x);\n        } else {\n            minpq.push(x);\n        }\n        \n        balanceHeaps();\n    }\n    \n    void balanceHeaps()\n    {\n        while (maxpq.size() > minpq.size() + 1) {\n            int top = maxpq.top();\n            maxpq.pop();\n            minpq.push(top);\n        }\n        \n        while (minpq.size() > maxpq.size()) {\n            int top = minpq.top();\n            minpq.pop();\n            maxpq.push(top);\n        }\n    }\n    \n    double getMedian()\n    {\n        if (maxpq.size() == minpq.size()) {\n            return (maxpq.top() + minpq.top()) / 2.0;\n        } else {\n            return maxpq.top();\n        }\n    }\n};\n",
      "lineHeight": 1.2
    },
    {
      "id": "PBpPuv698rzn7Xnt3NDbi",
      "type": "rectangle",
      "x": 147.04284786425876,
      "y": 3000.8383361484543,
      "width": 1587.1866146130403,
      "height": 2084.169827098294,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "an",
      "roundness": {
        "type": 3
      },
      "seed": 1232501237,
      "version": 181,
      "versionNonce": 1666640245,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713329923763,
      "link": null,
      "locked": false
    },
    {
      "id": "FDuByIR6pIpzhQGfbUk_v",
      "type": "rectangle",
      "x": 315.09785154013605,
      "y": 527.4127678383738,
      "width": 680.8384743163479,
      "height": 1137.603409490203,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ao",
      "roundness": {
        "type": 3
      },
      "seed": 2057227125,
      "version": 152,
      "versionNonce": 1256393755,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1713329966541,
      "link": null,
      "locked": false
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}